stages:
  - build 
  - deploy
  - clean

build-job-dev:
  variables:
    REACT_APP_API_URL: "https://newapi.passport.gg/"
  stage: build
  environment:
    name: development
  tags:
    - nix-gg 
  only:
    - dev
  script:
    - npm install --force
    - npm run build
  artifacts:
    expire_in: 1 day
    paths:
      - build

build-job-prod:
  variables:
    REACT_APP_API_URL: "https://newapi.passport.gg/"
  stage: build
  environment:
    name: production
  tags:
    - nix-gg 
  only:
    - main-NOT-EXIST
  script:
    - npm install --force
    - npm run build
  artifacts:
    expire_in: 1 day
    paths:
      - build

deploy-job-dev:
  stage: deploy
  environment:
    name: development
  variables:
    GIT_STRATEGY: none
  tags:
    - nix-gg 
  only:
    - dev
  before_script:
    - aws configure set aws_access_key_id ${CI_AWS_ACCESS_KEY}
    - aws configure set aws_secret_access_key ${CI_AWS_SECRET_KEY}
    - aws configure set default_region_name ${CI_AWS_REGION}
  script:
    - aws s3 cp build/ s3://${CI_AWS_BUCKET_NAME}/ --recursive
    - aws cloudfront create-invalidation --distribution-id ${CI_AWS_DISTRIBUTION_ID} --paths "/*"

deploy-job-prod:
  stage: deploy
  environment:
    name: production
  variables:
    GIT_STRATEGY: none
  tags:
    - nix-gg 
  only:
    - main-NOT-EXIST
  before_script:
    - aws configure set aws_access_key_id ${CI_AWS_ACCESS_KEY}
    - aws configure set aws_secret_access_key ${CI_AWS_SECRET_KEY}
    - aws configure set default_region_name ${CI_AWS_REGION}
  script:
    - aws s3 cp build/ s3://${CI_AWS_BUCKET_NAME}/ --recursive
    - aws cloudfront create-invalidation --distribution-id ${CI_AWS_DISTRIBUTION_ID} --paths "/*"

clean-job:
  stage: clean
  variables:
    GIT_STRATEGY: none
  tags:
    - nix-gg    
  only:
    - dev
    - main-NOT-EXIST
  when: always
  script: 
    - rm -rf build
    - docker rmi $(docker images -q --no-trunc) -f